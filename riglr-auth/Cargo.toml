[package]
name = "riglr-auth"
version = "0.1.0"
edition = "2021"
description = "Authentication and signer factory implementations for RIGLR"
authors = ["RIGLR Team"]
license = "MIT OR Apache-2.0"
repository = "https://github.com/yourusername/riglr"
keywords = ["blockchain", "authentication", "web3", "privy", "magic"]
categories = ["authentication", "cryptography", "web-programming"]

[dependencies]
# Core dependencies
riglr-core = { path = "../riglr-core" }
riglr-web-adapters = { path = "../riglr-web-adapters" }
riglr-solana-tools = { path = "../riglr-solana-tools", optional = true }
riglr-evm-tools = { path = "../riglr-evm-tools", optional = true }

# Async runtime
async-trait = "0.1"
tokio = { version = "1", features = ["full"] }

# Serialization
serde = { version = "1", features = ["derive"] }
serde_json = "1"

# HTTP client
reqwest = { version = "0.12", features = ["json"] }

# Error handling
thiserror = "2"
anyhow = "1"

# Logging
tracing = "0.1"

# Authentication providers
jsonwebtoken = { version = "9", optional = true }
base64 = "0.22"
hex = "0.4"

# Blockchain support
solana-sdk = { version = "2", optional = true }
solana-client = { version = "2", optional = true }
alloy = { workspace = true, optional = true }
ethers = { version = "2", optional = true }
bincode = { version = "1", optional = true }

# Caching
lru = { version = "0.12", optional = true }
dashmap = { version = "6", optional = true }

[dev-dependencies]
mockito = "1"
wiremock = "0.6"
tokio-test = "0.4"
proptest = "1"
tracing-subscriber = { version = "0.3", features = ["env-filter"] }
axum = "0.7"

[features]
default = ["privy", "web3auth", "magic", "solana", "evm"]
privy = ["dep:jsonwebtoken", "dep:lru"]
web3auth = ["dep:jsonwebtoken", "dep:dashmap"]
magic = ["dep:jsonwebtoken"]
solana = ["dep:solana-sdk", "dep:solana-client", "dep:riglr-solana-tools", "dep:bincode"]
evm = ["dep:alloy", "dep:ethers", "dep:riglr-evm-tools"]
caching = ["dep:lru", "dep:dashmap"]

[[example]]
name = "privy_auth"
required-features = ["privy"]

[[example]]
name = "multi_provider"