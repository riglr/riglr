# RIGLR Production Configuration Template
# Copy this file to .env and replace placeholder values

# ================================
# AI Provider Configuration  
# ================================
# Required: Choose your preferred AI provider
OPENAI_API_KEY={{your-openai-api-key}}

# Optional: Anthropic Claude (alternative to OpenAI)
ANTHROPIC_API_KEY={{your-anthropic-api-key}}

# ================================
# Database Configuration
# ================================
# Required: Redis for job queue and caching
REDIS_URL=redis://localhost:6379

# Required: Neo4j for graph memory (if using riglr-graph-memory)
NEO4J_URL=neo4j://localhost:7687

# ================================
# Blockchain API Keys
# ================================
# Required: Alchemy for reliable RPC access
ALCHEMY_API_KEY={{your-alchemy-api-key}}

# Required: Li.fi for cross-chain operations
LIFI_API_KEY={{your-lifi-api-key}}

# ================================
# EVM Chain RPC URLs
# Convention: RPC_URL_{CHAIN_ID}
# ================================

# Ethereum Mainnet (Chain ID: 1)
RPC_URL_1=https://eth-mainnet.alchemyapi.io/v2/{{your-alchemy-api-key}}

# Polygon Mainnet (Chain ID: 137)
RPC_URL_137=https://polygon-mainnet.alchemyapi.io/v2/{{your-alchemy-api-key}}

# Arbitrum One (Chain ID: 42161)
RPC_URL_42161=https://arb-mainnet.alchemyapi.io/v2/{{your-alchemy-api-key}}

# Base Mainnet (Chain ID: 8453)  
RPC_URL_8453=https://base-mainnet.alchemyapi.io/v2/{{your-alchemy-api-key}}

# Add any EVM-compatible chain by setting RPC_URL_{CHAIN_ID}
# Examples:
# RPC_URL_10=https://opt-mainnet.alchemyapi.io/v2/{{your-alchemy-api-key}}    # Optimism
# RPC_URL_56=https://bsc-dataseed.binance.org/                               # BSC  
# RPC_URL_43114=https://api.avax.network/ext/bc/C/rpc                        # Avalanche
# RPC_URL_250=https://rpc.ftm.tools/                                         # Fantom

# ================================
# Solana Configuration
# ================================
SOLANA_RPC_URL=https://api.mainnet-beta.solana.com
# Alternative: https://solana-api.projectserum.com

# Optional: Pump.fun Integration
PUMP_API_KEY={{your-pump-api-key}}

# ================================  
# Web Data APIs
# ================================
# Twitter/X API for sentiment analysis
TWITTER_BEARER_TOKEN={{your-twitter-bearer-token}}

# Exa search API for web research
EXA_API_KEY={{your-exa-api-key}}

# ================================
# Server Configuration
# ================================
PORT=3000

# ================================
# Production Security
# ================================
# Application environment
APP_ENV=production

# Logging level (error, warn, info, debug, trace)
RUST_LOG=info

# Enable fail-fast configuration validation
FAIL_FAST_CONFIG=true

# ================================
# Development/Testing Overrides
# ================================
# Uncomment for development only

# Development chains (testnets)
# RPC_URL_11155111=https://eth-sepolia.alchemyapi.io/v2/{{your-alchemy-api-key}}  # Sepolia
# RPC_URL_80001=https://polygon-mumbai.alchemyapi.io/v2/{{your-alchemy-api-key}}    # Mumbai

# Solana devnet
# SOLANA_RPC_URL=https://api.devnet.solana.com

# Test mode (prevents real transactions)
# TEST_MODE=true

# ================================
# Optional: Monitoring & Alerts  
# ================================
# Webhook URLs for notifications
# ALERT_WEBHOOK_URL=https://hooks.slack.com/your/webhook/url
# DISCORD_WEBHOOK_URL=https://discord.com/api/webhooks/your/webhook

# ================================
# Security Notes
# ================================
# 1. Never commit this file with real API keys
# 2. Use environment variable injection in production
# 3. Rotate API keys regularly
# 4. Monitor usage for each service
# 5. Set up billing alerts for paid services
# 6. Use separate keys for dev/staging/production