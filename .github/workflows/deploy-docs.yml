name: Deploy Website to GitHub Pages

on:
  push:
    branches:
      - main
    paths:
      - 'docs/**'
      - 'website/**'
      - '.github/workflows/deploy-docs.yml'
  workflow_dispatch:

permissions:
  contents: read
  pages: write
  id-token: write

concurrency:
  group: "pages-${{ github.ref }}"
  cancel-in-progress: true

jobs:
  build:
    runs-on: self-hosted
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Install mdbook dependencies
        run: |
          # Install necessary packages for Arch Linux
          if command -v pacman &> /dev/null; then
            echo "Installing mdbook dependencies for Arch Linux..."
            sudo pacman -Syu --noconfirm --needed base-devel || true
          fi

      - name: Setup mdBook
        uses: peaceiris/actions-mdbook@v2
        with:
          mdbook-version: '0.4.40'

      - name: Build mdBook
        run: |
          cd docs
          
          # Generate documentation from source (same as build.sh)
          if [ -f generate_docs.py ] && command -v python3 &> /dev/null; then
            echo "Generating tool reference documentation..."
            python3 generate_docs.py ../ src/tool-reference/
          fi
          
          if [ -f generate_comprehensive_docs.py ] && command -v python3 &> /dev/null; then
            echo "Generating comprehensive API documentation..."
            mkdir -p src/api-reference
            python3 generate_comprehensive_docs.py ../ src/api-reference/
          fi
          
          # Now build mdbook with all generated content
          mdbook build
          
          # Fix paths for /docs/ deployment
          if [ -f fix_paths_for_deployment.sh ]; then
            ./fix_paths_for_deployment.sh
          fi

      - name: Prepare deployment directory
        run: |
          # Create deployment structure
          mkdir -p deploy
          
          # Copy landing page to root
          cp website/index.html deploy/
          cp website/logo-h.png deploy/
          
          # Copy docs to /docs subdirectory
          cp -r docs/book deploy/docs
          
          # Ensure docs are accessible at both /docs and /docs/
          cp docs/book/index.html deploy/docs.html 2>/dev/null || true
          
          # Debug: List what's in the deployment directory
          echo "=== Deployment structure ==="
          find deploy -type f -name "*.js" -o -name "*.css" | head -20
          echo "=== Checking for critical files ==="
          ls -la deploy/docs/toc.js || echo "toc.js not found"
          ls -la deploy/docs/css/riglr.css || echo "riglr.css not found"

      - name: Setup Pages
        uses: actions/configure-pages@v5

      - name: Upload artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: ./deploy

  deploy:
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: self-hosted
    needs: build
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4