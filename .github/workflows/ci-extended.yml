name: Extended CI

on:
  # Run on main branch pushes and manual trigger only
  push:
    branches: [ main ]
  workflow_dispatch:
  schedule:
    # Weekly run to catch issues
    - cron: '0 2 * * 0'

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

env:
  CARGO_TERM_COLOR: always
  RUST_BACKTRACE: 1

jobs:
  # Beta and nightly tests
  beta-nightly:
    name: Rust ${{ matrix.rust }}
    runs-on: ubuntu-latest
    strategy:
      matrix:
        rust: [beta, nightly]
    continue-on-error: true
    steps:
      - uses: actions/checkout@v4
      
      - name: Install Rust ${{ matrix.rust }}
        uses: dtolnay/rust-toolchain@master
        with:
          toolchain: ${{ matrix.rust }}
      
      - name: Cache dependencies
        uses: Swatinem/rust-cache@v2
      
      - name: Run tests
        run: cargo test --workspace --all-features
        env:
          ANTHROPIC_API_KEY: test_key
          SOLANA_RPC_URL: https://api.devnet.solana.com

  # Security audit
  security:
    name: Security Audit
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      
      - name: Run cargo audit
        uses: rustsec/audit-check@v2
        with:
          token: ${{ secrets.GITHUB_TOKEN }}

  # Code coverage (optional, for visibility)
  coverage:
    name: Code Coverage
    runs-on: ubuntu-latest
    continue-on-error: true
    steps:
      - uses: actions/checkout@v4
      
      - name: Install Rust
        uses: dtolnay/rust-toolchain@stable
      
      - name: Install tarpaulin
        run: cargo install cargo-tarpaulin
      
      - name: Generate coverage
        run: |
          cargo tarpaulin \
            --workspace \
            --all-features \
            --timeout 120 \
            --out Xml \
            --exclude-files "*/tests/*" \
            --exclude-files "*/benches/*" \
            --exclude-files "*/examples/*"
        env:
          ANTHROPIC_API_KEY: test_key
          SOLANA_RPC_URL: https://api.devnet.solana.com
      
      - name: Upload to Codecov
        uses: codecov/codecov-action@v3
        with:
          fail_ci_if_error: false

  # Dependency check with cargo-deny
  dependencies:
    name: Dependency Check
    runs-on: ubuntu-latest
    continue-on-error: true
    steps:
      - uses: actions/checkout@v4
      
      - name: Check dependencies
        uses: EmbarkStudios/cargo-deny-action@v2